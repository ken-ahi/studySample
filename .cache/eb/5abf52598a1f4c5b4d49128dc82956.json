{"id":"src/index.js","dependencies":[{"name":"/project/studySample/package.json","includedInParent":true,"mtime":1669262610291}],"generated":{"js":"var _console;\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n/**\n * const、letの変数宣言\n */\n\n//  /**\n//   * 従来の書き方\n//   */\n//  var val1 = \"var変数\";\n//  console.log(val1);\n\n//  /**\n//   * var変数は上書き可能\n//   */\n//  val1 = \"var変数は上書き\";\n//  console.log(val1);\n\n// //  var変数は再宣言可能\n// var val1 = \"var変数を再宣言\";\n// console.log(val1);\n\n// // 2015年以降の書き方\n// let val2 = \"let変数\";\n// console.log(val2);\n\n// // letも上書き可能\n// val2 = \"let変数を上書き\";\n// console.log(val2);\n\n// // letは再宣言不可能！！\n// let val2 = \"let変数を再宣言\";\n\n// // 変数が上書きされるときはletを使用\n\n// // constは上書きも再宣言も不可能\n// const val3 = \"const変数\";\n// console.log(val3);\n\n// // constが上書きできないことを確認\n// // val3 = \"const上書き\";\n\n// // constは再宣言できないことを確認\n// const val3 = \"const再宣言\";\n\n// objectを定義\n// // オブジェクトの場合はconstであっても変数を上書きできる\n\n// const val4 = {\n//   name: \"ahi\",\n//   age: 26,\n// };\n\n// val4.name = \"あひ\";\n\n// // constで定義したオブジェクトはプロパティの変更追加が可能\n// val4.address = \"北海道\";\n// console.log(val4);\n\n// // 配列の場合もconstで変数の変更を確認\n// const val5 = [\"dog\", \"cat\"];\n// console.log(val5);\n\n// val5[0] = \"bird\";\n\n// val5.push(\"monkey\");\n\n// // reactの開発ではほとんど\"const\"を使って定義\n// // 変更が必要なものは\"state\"を使う\n\n/**\n * テンプレート文字列　ES2015で追加された昨日\n * 文字列の中にjsの変数を埋め込めるようになった\n */\n\n//  const name = \"きたわき\";\n//  const age = 26;\n// //  「私の名前はきたわきです。年齢は26歳です」\n\n// // // 従来の方法\n// const message1 = \"私の名前は\" + name + \"です。年齢は\" + age + \"です。\";\n// console.log(message1);\n\n// // ES2015以降　テンプレート文字列を使用\n// const message2 = `私の名前は${name}です。年齢は${age}です。`;\n// console.log(message2);\n\n/**\n * アロー関数\n */\n\n//従来の関数\n// //  例、渡したstringの引数をそのまま返す\n//  function func1(str) {\n//    return str;\n// //  }\n// const func1 = function(str){\n//   return str;\n// }\n//  console.log(func1(\"ファンク１です\"));\n\n// // ES2015以降の機能 アロー関数\n// const func2 = (str) => str;\n\n// console.log(func2(\"ファンク2です\"));\n\n// const func3 = (num1, num2) => {\n//   return num1+num2;\n// }\n\n// console.log(func3(10, 20));\n\n/**\n * 分割代入\n */\n// const myProfile = {\n//   name: \"けんし\",\n//   age: 26,\n// }\n\n// // const message1 = `名前は${myProfile.name}です。年齢は${myProfile.age}です。`;\n// // console.log(message1);\n\n// const { name, age } = myProfile;\n\n// const message2 = `名前は${name}です。年齢は${age}です。`;\n// console.log(message2);\n\n// const myProfile = ['けんし', '26'];\n\n// const message3 = `名前は${myProfile[0]}です。年齢は${myProfile[1]}です。`;\n// console.log(message3);\n\n// const [name, age] = myProfile;\n// const message4 = `名前は${name}です。年齢は${age}です。`;\n// console.log(message4);\n\n/**\n * デフォルト値\n//  */\n// const sayHello =(name=\"ゲスト\")=> console.log(`こんにちは${name}さん`);\n// sayHello(\"けんし\");\n\n/**\n * スプレッド構文...\n */\n// 配列の展開\n// const arr1 = [1,2];\n// console.log(arr1);\n// console.log(...arr1);\n\n// const sumFunc = (num1, num2) => console.log(num1+num2);\n// sumFunc(arr1[0], arr1[1]);\n// sumFunc(...arr1);//配列の中身を順番に処理する\n\n// まとめる\n// const arr2 = [1,2,3,4,5];\n// const [num1, num2, ...arr3] = arr2;//分割代入\n\n// console.log(num1);\n\n// console.log(num2);\n// console.log(...arr3);\n\n// 配列のコピーや結合\nvar arr4 = [10, 20];\nvar arr5 = [30, 40];\nvar arr6 = [].concat(arr4); //配列のコピー\n(_console = console).log.apply(_console, _toConsumableArray(arr6));"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/index.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"src/index.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"src/index.js","original":{"line":3,"column":0}},{"generated":{"line":12,"column":0},"source":"src/index.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"src/index.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"src/index.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"src/index.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"src/index.js","original":{"line":9,"column":0}},{"generated":{"line":18,"column":0},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"src/index.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"src/index.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"src/index.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"src/index.js","original":{"line":15,"column":0}},{"generated":{"line":24,"column":0},"source":"src/index.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"src/index.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"src/index.js","original":{"line":19,"column":0}},{"generated":{"line":28,"column":0},"source":"src/index.js","original":{"line":21,"column":0}},{"generated":{"line":29,"column":0},"source":"src/index.js","original":{"line":22,"column":0}},{"generated":{"line":30,"column":0},"source":"src/index.js","original":{"line":23,"column":0}},{"generated":{"line":32,"column":0},"source":"src/index.js","original":{"line":25,"column":0}},{"generated":{"line":33,"column":0},"source":"src/index.js","original":{"line":26,"column":0}},{"generated":{"line":34,"column":0},"source":"src/index.js","original":{"line":27,"column":0}},{"generated":{"line":36,"column":0},"source":"src/index.js","original":{"line":29,"column":0}},{"generated":{"line":37,"column":0},"source":"src/index.js","original":{"line":30,"column":0}},{"generated":{"line":39,"column":0},"source":"src/index.js","original":{"line":32,"column":0}},{"generated":{"line":41,"column":0},"source":"src/index.js","original":{"line":34,"column":0}},{"generated":{"line":42,"column":0},"source":"src/index.js","original":{"line":35,"column":0}},{"generated":{"line":43,"column":0},"source":"src/index.js","original":{"line":36,"column":0}},{"generated":{"line":45,"column":0},"source":"src/index.js","original":{"line":38,"column":0}},{"generated":{"line":46,"column":0},"source":"src/index.js","original":{"line":39,"column":0}},{"generated":{"line":48,"column":0},"source":"src/index.js","original":{"line":41,"column":0}},{"generated":{"line":49,"column":0},"source":"src/index.js","original":{"line":42,"column":0}},{"generated":{"line":51,"column":0},"source":"src/index.js","original":{"line":44,"column":0}},{"generated":{"line":52,"column":0},"source":"src/index.js","original":{"line":45,"column":0}},{"generated":{"line":54,"column":0},"source":"src/index.js","original":{"line":47,"column":0}},{"generated":{"line":55,"column":0},"source":"src/index.js","original":{"line":48,"column":0}},{"generated":{"line":56,"column":0},"source":"src/index.js","original":{"line":49,"column":0}},{"generated":{"line":57,"column":0},"source":"src/index.js","original":{"line":50,"column":0}},{"generated":{"line":59,"column":0},"source":"src/index.js","original":{"line":52,"column":0}},{"generated":{"line":61,"column":0},"source":"src/index.js","original":{"line":54,"column":0}},{"generated":{"line":62,"column":0},"source":"src/index.js","original":{"line":55,"column":0}},{"generated":{"line":63,"column":0},"source":"src/index.js","original":{"line":56,"column":0}},{"generated":{"line":65,"column":0},"source":"src/index.js","original":{"line":58,"column":0}},{"generated":{"line":66,"column":0},"source":"src/index.js","original":{"line":59,"column":0}},{"generated":{"line":67,"column":0},"source":"src/index.js","original":{"line":60,"column":0}},{"generated":{"line":69,"column":0},"source":"src/index.js","original":{"line":62,"column":0}},{"generated":{"line":71,"column":0},"source":"src/index.js","original":{"line":64,"column":0}},{"generated":{"line":73,"column":0},"source":"src/index.js","original":{"line":66,"column":0}},{"generated":{"line":74,"column":0},"source":"src/index.js","original":{"line":67,"column":0}},{"generated":{"line":76,"column":0},"source":"src/index.js","original":{"line":69,"column":0}},{"generated":{"line":77,"column":0},"source":"src/index.js","original":{"line":70,"column":0}},{"generated":{"line":78,"column":0},"source":"src/index.js","original":{"line":71,"column":0}},{"generated":{"line":79,"column":0},"source":"src/index.js","original":{"line":72,"column":0}},{"generated":{"line":81,"column":0},"source":"src/index.js","original":{"line":74,"column":0}},{"generated":{"line":82,"column":0},"source":"src/index.js","original":{"line":75,"column":0}},{"generated":{"line":83,"column":0},"source":"src/index.js","original":{"line":76,"column":0}},{"generated":{"line":85,"column":0},"source":"src/index.js","original":{"line":78,"column":0}},{"generated":{"line":86,"column":0},"source":"src/index.js","original":{"line":79,"column":0}},{"generated":{"line":87,"column":0},"source":"src/index.js","original":{"line":80,"column":0}},{"generated":{"line":89,"column":0},"source":"src/index.js","original":{"line":82,"column":0}},{"generated":{"line":90,"column":0},"source":"src/index.js","original":{"line":83,"column":0}},{"generated":{"line":91,"column":0},"source":"src/index.js","original":{"line":84,"column":0}},{"generated":{"line":93,"column":0},"source":"src/index.js","original":{"line":86,"column":0}},{"generated":{"line":94,"column":0},"source":"src/index.js","original":{"line":87,"column":0}},{"generated":{"line":95,"column":0},"source":"src/index.js","original":{"line":88,"column":0}},{"generated":{"line":97,"column":0},"source":"src/index.js","original":{"line":90,"column":0}},{"generated":{"line":98,"column":0},"source":"src/index.js","original":{"line":91,"column":0}},{"generated":{"line":99,"column":0},"source":"src/index.js","original":{"line":92,"column":0}},{"generated":{"line":100,"column":0},"source":"src/index.js","original":{"line":93,"column":0}},{"generated":{"line":101,"column":0},"source":"src/index.js","original":{"line":94,"column":0}},{"generated":{"line":102,"column":0},"source":"src/index.js","original":{"line":95,"column":0}},{"generated":{"line":103,"column":0},"source":"src/index.js","original":{"line":96,"column":0}},{"generated":{"line":104,"column":0},"source":"src/index.js","original":{"line":97,"column":0}},{"generated":{"line":105,"column":0},"source":"src/index.js","original":{"line":98,"column":0}},{"generated":{"line":107,"column":0},"source":"src/index.js","original":{"line":100,"column":0}},{"generated":{"line":108,"column":0},"source":"src/index.js","original":{"line":101,"column":0}},{"generated":{"line":110,"column":0},"source":"src/index.js","original":{"line":103,"column":0}},{"generated":{"line":112,"column":0},"source":"src/index.js","original":{"line":105,"column":0}},{"generated":{"line":113,"column":0},"source":"src/index.js","original":{"line":106,"column":0}},{"generated":{"line":114,"column":0},"source":"src/index.js","original":{"line":107,"column":0}},{"generated":{"line":116,"column":0},"source":"src/index.js","original":{"line":109,"column":0}},{"generated":{"line":118,"column":0},"source":"src/index.js","original":{"line":111,"column":0}},{"generated":{"line":119,"column":0},"source":"src/index.js","original":{"line":112,"column":0}},{"generated":{"line":120,"column":0},"source":"src/index.js","original":{"line":113,"column":0}},{"generated":{"line":121,"column":0},"source":"src/index.js","original":{"line":114,"column":0}},{"generated":{"line":122,"column":0},"source":"src/index.js","original":{"line":115,"column":0}},{"generated":{"line":123,"column":0},"source":"src/index.js","original":{"line":116,"column":0}},{"generated":{"line":124,"column":0},"source":"src/index.js","original":{"line":117,"column":0}},{"generated":{"line":126,"column":0},"source":"src/index.js","original":{"line":119,"column":0}},{"generated":{"line":127,"column":0},"source":"src/index.js","original":{"line":120,"column":0}},{"generated":{"line":129,"column":0},"source":"src/index.js","original":{"line":122,"column":0}},{"generated":{"line":131,"column":0},"source":"src/index.js","original":{"line":124,"column":0}},{"generated":{"line":132,"column":0},"source":"src/index.js","original":{"line":125,"column":0}},{"generated":{"line":134,"column":0},"source":"src/index.js","original":{"line":127,"column":0}},{"generated":{"line":136,"column":0},"source":"src/index.js","original":{"line":129,"column":0}},{"generated":{"line":137,"column":0},"source":"src/index.js","original":{"line":130,"column":0}},{"generated":{"line":139,"column":0},"source":"src/index.js","original":{"line":132,"column":0}},{"generated":{"line":140,"column":0},"source":"src/index.js","original":{"line":133,"column":0}},{"generated":{"line":141,"column":0},"source":"src/index.js","original":{"line":134,"column":0}},{"generated":{"line":143,"column":0},"source":"src/index.js","original":{"line":136,"column":0}},{"generated":{"line":144,"column":0},"source":"src/index.js","original":{"line":137,"column":0}},{"generated":{"line":145,"column":0},"source":"src/index.js","original":{"line":138,"column":0}},{"generated":{"line":146,"column":0},"source":"src/index.js","original":{"line":139,"column":0}},{"generated":{"line":147,"column":0},"source":"src/index.js","original":{"line":140,"column":0}},{"generated":{"line":149,"column":0},"source":"src/index.js","original":{"line":142,"column":0}},{"generated":{"line":150,"column":0},"source":"src/index.js","original":{"line":143,"column":0}},{"generated":{"line":151,"column":0},"source":"src/index.js","original":{"line":144,"column":0}},{"generated":{"line":152,"column":0},"source":"src/index.js","original":{"line":145,"column":0}},{"generated":{"line":153,"column":0},"source":"src/index.js","original":{"line":146,"column":0}},{"generated":{"line":154,"column":0},"source":"src/index.js","original":{"line":147,"column":0}},{"generated":{"line":155,"column":0},"source":"src/index.js","original":{"line":148,"column":0}},{"generated":{"line":157,"column":0},"source":"src/index.js","original":{"line":150,"column":0}},{"generated":{"line":158,"column":0},"source":"src/index.js","original":{"line":151,"column":0}},{"generated":{"line":159,"column":0},"source":"src/index.js","original":{"line":152,"column":0}},{"generated":{"line":161,"column":0},"source":"src/index.js","original":{"line":154,"column":0}},{"generated":{"line":162,"column":0},"source":"src/index.js","original":{"line":155,"column":0}},{"generated":{"line":163,"column":0},"source":"src/index.js","original":{"line":156,"column":0}},{"generated":{"line":165,"column":0},"source":"src/index.js","original":{"line":158,"column":0}},{"generated":{"line":167,"column":0},"source":"src/index.js","original":{"line":160,"column":0}},{"generated":{"line":168,"column":0},"source":"src/index.js","original":{"line":161,"column":0}},{"generated":{"line":170,"column":0},"source":"src/index.js","original":{"line":163,"column":0}},{"generated":{"line":171,"column":0},"source":"src/index.js","original":{"line":164,"column":0}},{"generated":{"line":171,"column":4},"source":"src/index.js","original":{"line":164,"column":6},"name":"arr4"},{"generated":{"line":171,"column":8},"source":"src/index.js","original":{"line":164,"column":10}},{"generated":{"line":171,"column":11},"source":"src/index.js","original":{"line":164,"column":13}},{"generated":{"line":171,"column":12},"source":"src/index.js","original":{"line":164,"column":14}},{"generated":{"line":171,"column":14},"source":"src/index.js","original":{"line":164,"column":16}},{"generated":{"line":171,"column":16},"source":"src/index.js","original":{"line":164,"column":18}},{"generated":{"line":171,"column":18},"source":"src/index.js","original":{"line":164,"column":20}},{"generated":{"line":171,"column":19},"source":"src/index.js","original":{"line":164,"column":21}},{"generated":{"line":172,"column":0},"source":"src/index.js","original":{"line":165,"column":0}},{"generated":{"line":172,"column":4},"source":"src/index.js","original":{"line":165,"column":6},"name":"arr5"},{"generated":{"line":172,"column":8},"source":"src/index.js","original":{"line":165,"column":10}},{"generated":{"line":172,"column":11},"source":"src/index.js","original":{"line":165,"column":13}},{"generated":{"line":172,"column":12},"source":"src/index.js","original":{"line":165,"column":14}},{"generated":{"line":172,"column":14},"source":"src/index.js","original":{"line":165,"column":16}},{"generated":{"line":172,"column":16},"source":"src/index.js","original":{"line":165,"column":18}},{"generated":{"line":172,"column":18},"source":"src/index.js","original":{"line":165,"column":20}},{"generated":{"line":172,"column":19},"source":"src/index.js","original":{"line":165,"column":21}},{"generated":{"line":173,"column":0},"source":"src/index.js","original":{"line":166,"column":0}},{"generated":{"line":173,"column":4},"source":"src/index.js","original":{"line":166,"column":6},"name":"arr6"},{"generated":{"line":173,"column":8},"source":"src/index.js","original":{"line":166,"column":10}},{"generated":{"line":173,"column":21},"source":"src/index.js","original":{"line":166,"column":17},"name":"arr4"},{"generated":{"line":173,"column":25},"source":"src/index.js","original":{"line":166,"column":21}},{"generated":{"line":173,"column":26},"source":"src/index.js","original":{"line":166,"column":22}},{"generated":{"line":173,"column":27},"source":"src/index.js","original":{"line":166,"column":23}},{"generated":{"line":173,"column":28},"source":"src/index.js","original":{"line":166,"column":24}},{"generated":{"line":174,"column":0},"source":"src/index.js","original":{"line":167,"column":0}},{"generated":{"line":174,"column":12},"source":"src/index.js","original":{"line":167,"column":0},"name":"console"},{"generated":{"line":174,"column":19},"source":"src/index.js","original":{"line":167,"column":7}},{"generated":{"line":174,"column":21},"source":"src/index.js","original":{"line":167,"column":8},"name":"log"},{"generated":{"line":174,"column":24},"source":"src/index.js","original":{"line":167,"column":11}},{"generated":{"line":174,"column":60},"source":"src/index.js","original":{"line":167,"column":15},"name":"arr6"},{"generated":{"line":174,"column":64},"source":"src/index.js","original":{"line":167,"column":19}},{"generated":{"line":174,"column":66},"source":"src/index.js","original":{"line":167,"column":20}}],"sources":{"src/index.js":"/**\n * const、letの変数宣言\n */\n\n//  /**\n//   * 従来の書き方\n//   */\n//  var val1 = \"var変数\";\n//  console.log(val1);\n\n//  /**\n//   * var変数は上書き可能\n//   */\n//  val1 = \"var変数は上書き\";\n//  console.log(val1);\n\n// //  var変数は再宣言可能\n// var val1 = \"var変数を再宣言\";\n// console.log(val1);\n\n// // 2015年以降の書き方\n// let val2 = \"let変数\";\n// console.log(val2);\n\n// // letも上書き可能\n// val2 = \"let変数を上書き\";\n// console.log(val2);\n\n// // letは再宣言不可能！！\n// let val2 = \"let変数を再宣言\";\n\n// // 変数が上書きされるときはletを使用\n\n// // constは上書きも再宣言も不可能\n// const val3 = \"const変数\";\n// console.log(val3);\n\n// // constが上書きできないことを確認\n// // val3 = \"const上書き\";\n\n// // constは再宣言できないことを確認\n// const val3 = \"const再宣言\";\n\n// objectを定義\n// // オブジェクトの場合はconstであっても変数を上書きできる\n\n// const val4 = {\n//   name: \"ahi\",\n//   age: 26,\n// };\n\n// val4.name = \"あひ\";\n\n// // constで定義したオブジェクトはプロパティの変更追加が可能\n// val4.address = \"北海道\";\n// console.log(val4);\n\n// // 配列の場合もconstで変数の変更を確認\n// const val5 = [\"dog\", \"cat\"];\n// console.log(val5);\n\n// val5[0] = \"bird\";\n\n// val5.push(\"monkey\");\n\n// // reactの開発ではほとんど\"const\"を使って定義\n// // 変更が必要なものは\"state\"を使う\n\n/**\n * テンプレート文字列　ES2015で追加された昨日\n * 文字列の中にjsの変数を埋め込めるようになった\n */\n\n//  const name = \"きたわき\";\n//  const age = 26;\n// //  「私の名前はきたわきです。年齢は26歳です」\n\n// // // 従来の方法\n// const message1 = \"私の名前は\" + name + \"です。年齢は\" + age + \"です。\";\n// console.log(message1);\n\n// // ES2015以降　テンプレート文字列を使用\n// const message2 = `私の名前は${name}です。年齢は${age}です。`;\n// console.log(message2);\n\n/**\n * アロー関数\n */\n\n//従来の関数\n// //  例、渡したstringの引数をそのまま返す\n//  function func1(str) {\n//    return str;\n// //  }\n// const func1 = function(str){\n//   return str;\n// }\n//  console.log(func1(\"ファンク１です\"));\n\n// // ES2015以降の機能 アロー関数\n// const func2 = (str) => str;\n\n// console.log(func2(\"ファンク2です\"));\n\n// const func3 = (num1, num2) => {\n//   return num1+num2;\n// }\n\n// console.log(func3(10, 20));\n\n/**\n * 分割代入\n */\n// const myProfile = {\n//   name: \"けんし\",\n//   age: 26,\n// }\n\n// // const message1 = `名前は${myProfile.name}です。年齢は${myProfile.age}です。`;\n// // console.log(message1);\n\n// const { name, age } = myProfile;\n\n// const message2 = `名前は${name}です。年齢は${age}です。`;\n// console.log(message2);\n\n// const myProfile = ['けんし', '26'];\n\n// const message3 = `名前は${myProfile[0]}です。年齢は${myProfile[1]}です。`;\n// console.log(message3);\n\n// const [name, age] = myProfile;\n// const message4 = `名前は${name}です。年齢は${age}です。`;\n// console.log(message4);\n\n/**\n * デフォルト値\n//  */\n// const sayHello =(name=\"ゲスト\")=> console.log(`こんにちは${name}さん`);\n// sayHello(\"けんし\");\n\n/**\n * スプレッド構文...\n */\n// 配列の展開\n// const arr1 = [1,2];\n// console.log(arr1);\n// console.log(...arr1);\n\n// const sumFunc = (num1, num2) => console.log(num1+num2);\n// sumFunc(arr1[0], arr1[1]);\n// sumFunc(...arr1);//配列の中身を順番に処理する\n\n// まとめる\n// const arr2 = [1,2,3,4,5];\n// const [num1, num2, ...arr3] = arr2;//分割代入\n\n// console.log(num1);\n\n// console.log(num2);\n// console.log(...arr3);\n\n// 配列のコピーや結合\nconst arr4 = [10, 20];\nconst arr5 = [30, 40];\nconst arr6 = [...arr4]; //配列のコピー\nconsole.log(...arr6);\n\n"},"lineCount":null}},"error":null,"hash":"3d94f95551fa860c952030105ea50b6e","cacheData":{"env":{}}}